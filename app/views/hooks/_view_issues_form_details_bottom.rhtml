<%
fields = []
@issue.custom_field_values.each do |cust|
   fields.push(cust.custom_field_id)
end
custdep = nil
for i in 0..(fields.length-1) do
   for j in 0..(fields.length-1) do
	break if custdep = Customfielddep.find(:first,:conditions=>"custom_master_id="+fields[i].to_s+" and custom_slave_id="+fields[j].to_s) 
   end
   break if !custdep.nil?
end
return if (custdep.nil?)
master_id = "issue_custom_field_values_"+fields[i].to_s
slave_id = "issue_custom_field_values_"+fields[j].to_s
x = YAML.load(custdep.yaml) if !custdep.yaml.nil?
x = "" if x.nil?
custhash = x.to_json
%>   

<script type="text/javascript" charset="utf-8">

function update_select(m,s) {
slave.options.length=0;
if (custhash[m.value]) {
	try { slave.disabled=false; } catch(err) { slave.enable(); }
	var ary = custhash[m.value];
	for(i=0;i<ary.length;i++)
 		slave.options[slave.options.length] = new Option(ary[i],ary[i]); 
} else {
	try { slave.disabled=true; } catch(err) { slave.disable(); }
}
}

var master = document.getElementById("<%= master_id %>");
mv = master.value;
var slave = document.getElementById("<%= slave_id %>");
sv = slave.value;
var custhash = <%= custhash %>;

update_select(master,slave);

// prototype dependency
master.onchange=function(){ update_select(master,slave) };

//Event.observe(master,'change', function(){ update_select(master,slave) });



</script>

